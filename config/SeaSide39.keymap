#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <300>;
};

&lt {
    flavor = "balanced";
    quick-tap-ms = <300>;
};

/ {
    combos { compatible = "zmk,combos"; };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q             &kp W         &kp E      &kp R         &kp T                                     &kp Y  &kp U  &kp I      &kp O       &lt 5 P
&kp A             &kp S         &kp D      &kp F         &kp G                                     &kp H  &kp J  &kp K      &kp L       &mkp MB1
&mt LEFT_SHIFT Z  &kp X         &kp C      &kp V         &kp B                                     &kp N  &kp M  &kp COMMA  &kp PERIOD  &kp ENTER
&kp LEFT_CONTROL  &kp LEFT_ALT  &kp ENTER  &kp LEFT_WIN  &lt 2 SPACE  &mo 1      &mt RSHIFT ENTER  &mo 1                                &mkp MB3
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        SYMBOL {
            bindings = <
&kp ESCAPE      &kp SLASH  &kp N7        &kp N8        &kp N9                                   &kp BSLH        &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp MINUS      &kp BACKSPACE
&kp TAB         &kp MINUS  &kp NUMBER_4  &kp N5        &kp NUMBER_6                             &mkp MB4        &kp UP_ARROW    &mkp MB5         &kp LG(W)      &mkp MB2
&kp LEFT_SHIFT  &kp PLUS   &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3                             &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp LG(LC(T))  &kp TAB
&trans          &kp STAR   &kp N0        &kp EQUAL     &kp COMMA     &kp PERIOD      &kp LANG2  &kp LANG1                                                       &kp RG(R)
            >;
        };

        NUM {
            bindings = <
&kp EXCLAMATION  &kp AT_SIGN  &kp HASH  &kp DOLLAR  &kp PERCENT                      &kp CARET         &kp AMPERSAND      &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
&kp TILDE        &kp F5       &kp F6    &kp F7      &kp F8                           &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp MINUS     &kp EQUAL             &kp NON_US_BACKSLASH
&kp LEFT_SHIFT   &kp F1       &kp F2    &kp F3      &kp F4                           &kp SEMICOLON     &kp SQT            &kp SLASH     &kp QUESTION          &kp ENTER
&kp F9           &kp F10      &kp F11   &kp F12     &trans       &trans      &trans  &trans                                                                   &kp RIGHT_SHIFT
            >;
        };

        ARROW {
            bindings = <
&kp ESCAPE      &mkp MB4                &kp UP_ARROW    &mkp MB5                 &trans                       &kp LG(LEFT_ARROW)          &kp LA(LEFT_ARROW)      &kp UP_ARROW    &kp RA(RIGHT_ARROW)      &kp RG(RIGHT_ARROW)
&kp HOME        &kp LEFT_ARROW          &kp DOWN_ARROW  &kp RIGHT_ARROW          &kp END                      &kp LC(LS(TAB))             &kp LEFT_ARROW          &kp DOWN_ARROW  &kp RIGHT_ARROW          &kp RC(TAB)
&kp LEFT_SHIFT  &kp LG(LS(LEFT_ARROW))  &trans          &kp LG(LS(RIGHT_ARROW))  &trans                       &kp LA(LG(LC(LEFT_ARROW)))  &kp LA(LG(LEFT_ARROW))  &kp LA(LG(F))   &kp RG(RA(RIGHT_ARROW))  &kp RA(RC(RG(RIGHT_ARROW)))
&trans          &trans                  &trans          &trans                   &trans   &trans      &trans  &kp BACKSPACE                                                                                &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans                      &trans  &mkp MB1  &mkp MB3  &mkp MB2  &trans
&trans  &trans  &trans  &trans  &trans                      &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                &trans
            >;
        };

        SCROLL {
            bindings = <
&trans        &trans        &trans  &trans  &trans                                      &trans      &trans         &kp LC(LEFT_ARROW)  &kp LC(RIGHT_ARROW)  &trans
&trans        &trans        &trans  &trans  &trans                                      &trans      &kp PAGE_UP    &trans              &kp LC(TAB)          &trans
&trans        &trans        &trans  &trans  &trans                                      &kp HOME    &kp PAGE_DOWN  &kp END             &trans               &trans
&bt BT_SEL 0  &bt BT_SEL 1  &trans  &trans  &kp LS(LG(N5))  &kp LS(LG(N4))      &trans  &kp DELETE                                                          &trans
            >;
        };

        CONFIG {
            bindings = <
&bt BT_CLR_ALL  &bt BT_CLR    &trans        &trans        &trans                            &trans       &trans  &trans  &trans  &trans
&trans          &trans        &trans        &trans        &trans                            &trans       &trans  &trans  &trans  &trans
&bt BT_SEL 0    &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                      &bootloader  &trans  &trans  &trans  &trans
&trans          &trans        &trans        &trans        &trans        &trans      &trans  &trans                               &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        SCROLL {
            if-layers = <5>;
            then-layer = <5>;
        };
    };
};
